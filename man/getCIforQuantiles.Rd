% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getCIforQuantiles.R
\name{getCIforQuantiles}
\alias{getCIforQuantiles}
\title{Function returns a tibble of quantiles and confidence interval of quantiles for a range of probabilities.
'}
\usage{
getCIforQuantiles(
  vecDat,
  vecQuantiles,
  method = c("Nyblom", "Exact", "Bootstrap"),
  ci = 0.95,
  R = 9999,
  type = c(8, 1:7, 9)
)
}
\arguments{
\item{vecDat}{Vector of the data}

\item{vecQuantiles}{Vector of the quantiles you want}

\item{method}{Method you want to use to get the confidence intervals}

\item{ci}{Confidence interval (default .95)}

\item{R}{Number of bootstrap replications if using bootstrap method}

\item{type}{Type of quantile (default is 8)}
}
\value{
A tibble of the results
}
\description{
Function returns a tibble of quantiles and confidence interval of quantiles for a range of probabilities.
'
}
\section{Background}{

Quantiles, like percentiles, can be a very useful way of
understanding a distribution, in MH research, typically a
distribution of scores, often either help-seeking sample
distribution or a non-help-seeking sample.

For example, you might want to see if a score you have for
someone is above the 95\% (per)centile, i.e. above the .95
quantile of the non-help-seeking sample distribution.

The catch is that, like any sample statistic, a
quantile/percentile is generally being used as an estimate
of a population value.  That is to say we are really interested
in whether the score we have is above the 95\% percentile of a
non-help-seeking population.  That means that the
quantiles/percentiles from a sample are only approximate guides
to the population values.

As usual, a confidence interval (CI) around an observed quantile
is a way of seeing how precisely, assuming random sampling of
course, the sample quantile can guide us about the population
quantile.

Again as usual, the catch is that there are different ways of
compute the CI around a quantile.  This function is a wrapper
around three methods from Michael Höhle's quantileCI package:
\itemize{
\item the Nyblom method
\item the "exact" method
\item the bootstrap method
}

As I understand the quantileCI package the classic paper by
Nyblom, generally the Nyblom method will be as good or better
than the exact method and much faster than bootstrapping
so the Nyblom method is the default here but I have put the
others in for completeness.
}

\section{History}{

Started 4.vii.23
}

\examples{
\dontrun{
### will need tidyverse to run
library(tidyverse)
### will need quantileCI to run
### if you don't have quantileCI package you need to get it from github:
# devtools::install_github("hoehleatsu/quantileCI")
library(quantileCI)

### use the exact method
getCIforQuantiles(1:1000, c(.1, .5, .95), "e", ci = .95, R = 9999, type = 8)
### use the Nyblom method
getCIforQuantiles(1:1000, c(.1, .5, .95), "n", ci = .95, R = 9999, type = 8)
### use the bootstrap method
getCIforQuantiles(1:1000, c(.1, .5, .95), "b", ci = .95, R = 9999, type = 8)
}

}
\references{
\itemize{
\item Nyblom, J. (1992). Note on interpolated order statistics.
Statistics & Probability Letters, 14(2), 129–131.
https://doi.org/10.1016/0167-7152(92)90076-H
\item https://github.com/mhoehle/quantileCI
}
}
\author{
Chris Evans
}
\concept{CI functions}
