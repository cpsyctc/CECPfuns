% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getBootCIalpha.R
\name{getBootCIalpha}
\alias{getBootCIalpha}
\title{function returning observed Cronbach alpha with bootstrap confidence interval around that value}
\usage{
getBootCIalpha(
  dat,
  verbose = TRUE,
  na.rm = TRUE,
  nLT20err = TRUE,
  nGT10kerr = TRUE,
  bootReps = 1000,
  conf = 0.95,
  bootCImethod = c("perc", "norm", "basic", "bca")
)
}
\arguments{
\item{dat}{data, matrix, data frame or tibble and numeric item data as columns}

\item{verbose}{logical, if FALSE switches off messages}

\item{na.rm}{logical which causes function to throw error if there is missing data}

\item{nLT20err}{logical, throws error if length(na.omit(dat)) < 20, otherwise returns NA for CI}

\item{nGT10kerr}{logical, throws error if length(na.omit(dat)) > 10k to prevent very long rusn, override with FALSE}

\item{bootReps}{integer for number of bootstrap replications}

\item{conf}{numeric confidence interval desired as fraction, e.g. .95}

\item{bootCImethod}{method of deriving bootstrap CI from "perc", "norm", "basic" or "bca"}
}
\value{
list of length 3: obsAlpha, LCLAlpha and UCLAlpha
}
\description{
function returning observed Cronbach alpha with bootstrap confidence interval around that value
}
\section{History/development log}{

Started before 5.iv.21
}

\examples{
\dontrun{
set.seed(12345)
tmpMat <- matrix(rnorm(200), ncol = 10)
tmpDat <- as.data.frame(tmpMat)
tmpTib <- as_tibble(tmpDat)

### all default arguments
getBootCIalpha (tmpMat)
}

}
\seealso{
Other bootstrap CI functions: 
\code{\link{getBootCICSC}()},
\code{\link{getBootCICorr}()},
\code{\link{getBootCIgrpMeanDiff}()},
\code{\link{getBootCImean}()}

Other Chronbach alpha functions: 
\code{\link{getChronbachAlpha}()}
}
\author{
Chris Evans
}
\concept{Chronbach alpha functions}
\concept{bootstrap CI functions}
