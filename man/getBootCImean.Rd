% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getBootCImean.R
\name{getBootCImean}
\alias{getBootCImean}
\title{Function to return bootstrap CI around observed mean}
\usage{
getBootCImean(
  var,
  data,
  bootReps = 1000,
  conf = 0.95,
  bootCImethod = c("perc", "norm", "basic", "bca"),
  na.rm = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{var}{name of variable in ...}

\item{data}{dataframe or tibble (often cur_data() if using function in dplyr pipe)}

\item{bootReps}{integer for number of bootstrap replications}

\item{conf}{confidence interval desired as fraction, e.g. .95}

\item{bootCImethod}{method of deriving bootstrap CI from "perc", "norm", "basic" or "bca"}

\item{na.rm}{logical, set to FALSE to ensure function will fail if there are missing data}

\item{verbose}{logical, FALSE suppresses the messages}
}
\value{
list of length 3: obsmean, LCLmean and UCLmean
}
\description{
Function to return bootstrap CI around observed mean
}
\examples{
\dontrun{
set.seed(12345) # get replicable results

### now make up some silly data
n <- 50
rnorm(n) \%>\% # get some random Gaussian data
  as_tibble() \%>\%
  ### create a spurious grouping variable
  mutate(food = sample(c("sausages", "carrots"), n, replace = TRUE),
         ### create variable with some missing data to test na.rm = FALSE
         y = if_else(value < -1, NA_real_, value)) -> tmpDat

### check that worked!
tmpDat
### looks fine!

### default arguments, get mean of value
tmpDat \%>\%
  summarise(meanCI = list(getBootCImean(value, cur_data()))) \%>\%
  unnest_wider(meanCI)

### default arguments, get mean of value by food
tmpDat \%>\%
  group_by(food) \%>\%
  summarise(meanCI = list(getBootCImean(value, cur_data()))) \%>\%
  unnest_wider(meanCI)

### suppress messages
tmpDat \%>\%
  summarise(meanCI = list(getBootCImean(value,
                                        cur_data(),
                                        verbose = FALSE))) \%>\%
  unnest_wider(meanCI)

### default silent omission of missing data, messages back
###  analysing variable y which has missing data
###  (see "Usable n")
tmpDat \%>\%
  summarise(meanCI = list(getBootCImean(y,
                                        cur_data(),
                                        verbose = TRUE))) \%>\%
  unnest_wider(meanCI)

### use na.rm = FALSE to ensure call will fail if there are missing data
tmpDat \%>\%
  summarise(meanCI = list(getBootCImean(y,
                                        cur_data(),
                                        verbose = TRUE,
                                        na.rm = FALSE))) \%>\%
  unnest_wider(meanCI)

### change bootstrap interval
tmpDat \%>\%
  summarise(meanCI = list(getBootCImean(y,
                                        cur_data(),
                                        conf = .9))) \%>\%
  unnest_wider(meanCI)

### change bootstrap CI method ("perc" is default)
tmpDat \%>\%
  summarise(meanCI = list(getBootCImean(y,
                                        cur_data(),
                                        verbose = TRUE,
                                        bootCImethod = "no"))) \%>\%
  unnest_wider(meanCI)

### should fail on impossible to decode choice of method in args
tmpDat \%>\%
  summarise(meanCI = list(getBootCImean(y,
                                        cur_data(),
                                        verbose = TRUE,
                                        bootCImethod = "b"))) \%>\%
  unnest_wider(meanCI)
}

}
\seealso{
Other bootstrap CI functions: 
\code{\link{getBootCICSC}()},
\code{\link{getBootCICorr}()}
}
\author{
Chris Evans
}
\concept{bootstrap CI functions}
