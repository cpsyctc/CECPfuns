% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classifyRCIfromScores.R
\name{classifyRCIfromScores}
\alias{classifyRCIfromScores}
\title{Function to classify changes using the RCI paradigm}
\usage{
classifyRCIfromScores(
  scoreChange = NULL,
  score1 = NULL,
  score2 = NULL,
  RCI = NULL,
  cueing = "negative",
  verbose = TRUE,
  returnTable = TRUE,
  dp = 1
)
}
\arguments{
\item{scoreChange}{numeric vector of score changes}

\item{score1}{numeric vector of baseline scores (if not giving scoreChange)}

\item{score2}{numeric vector of final scores (if not giving scoreChange)}

\item{RCI}{numeric value of the RCI}

\item{cueing}{whether measure is cued positively or negatively}

\item{verbose}{logical: suppresses messages if FALSE}

\item{returnTable}{logical: whether summary table returned (TRUE) or a tibble of classified scores (FALSE)}

\item{dp}{numeric: number of decimal places in percentages (if returnTable TRUE)}
}
\value{
a tibble, either of the summary breakdown with n and \% by classification, or a tibble of the data with classified change
}
\description{
Function to classify changes using the RCI paradigm
}
\section{Background}{

The RCI is part of Jacobson, Follette and Revenstorf's "RCSC":
Reliable and Clinically Significant Change paradigm.
}

\examples{

### create some spurious scores
n <- 75
score1 <- rnorm(n) # random Gaussian scores
score2 <- score1 - rnorm(n, mean = .2, sd = .2) # and some random change
scoreChange <- score1 - score2 # get the change

classifyRCIfromScores(scoreChange, RCI = .3)

classifyRCIfromScores(score1 = score1, score2 = score2, RCI = .3)


}
\seealso{
\code{\link{getCSC}} for more general information about the paradigm and

\code{\link{getRCIfromSDandAlpha}} for more detail about the RCI.

Note that by the logic of the criterion, change has to exceed the RCI,
not just equal it, for change to be deemed reliable.

Other RCSC functions: 
\code{\link{getBootCICSC}()},
\code{\link{getCSC}()},
\code{\link{getRCIfromSDandAlpha}()}
}
\author{
Chris Evans
}
\concept{RCSC functions}
